SABER SE ESTÁ VINCULADO COM REPOSITÓRIO ONLINE OU LOCAL:
-git remote -v

ADICIONAR REPOSITÓRIO ONLINE: 
- git remote add origin ( Link do repositório )

ALTERAÇÃO DE REPOSITÓRIO : URL
-git remote set-url origin ( Link do repositório)

ENVIAR PARA O GIT HUB:
-git push

TRAZER INFORMAÇÃO DO GITHUB
- git pull

CRIANDO BRANCH LOCAL
- git branch (nome da branch)
- git branch      < ver todas as branch >
- git checkout .  < entrar na branch >
- git push --set-upstream origin (nome da branch)  < enviar branch para o renoto >
- git branch -D (nome da branch) < excluir branch >
- git push --delete origin (nome da branch) < excluir branch remota)
- git log (nome da branch) --oneline
- git merge (nome da branch)             < trazer mudanças >
- git branch --no-merged                 < branch não mescladas >
- git git branch --merged                < branch mescladas >


TAG:
- git tag (nome da tag)                  < criar tag > 
- git tag -a -m " xxx " (nome da tag)    < criar tag completo >
- git show (nome da tag)                 < histórico da tag > 
- git tag                                < ver todas as tags >
- git tag (nome da tag) (Numero do commit) < criar tag no commit antigo > 
- git tag -a -m " xxx " (nome da tag) ( numero do commiit) < criar tag no commit antigo >
- git push origin (nome da tag)          < enviar tag para o remoto > 
- git push --tags                        < enviar tag para o remoto >  
- git checkout (nome da tag)             < entrar na tag >
- git switch -                           < voltar >
- git diff (nome da tag) (nome da tag)   < comparar tag > 
- git tag -d (nome da tag)               < excluir tag local >
- git push --delete origin (nome da tag ) < excluiir tag remota > 

STASH:  
- git stash                            < salvar na memoria > 
- git stash list 
- git stash apply                      < aplicar mudanças salvas > 
- git stash apply (nome da stash list) 
- git stash pop                        < aplicar e remover stash >
- git stash pop (nome da stash list)
- git stash drop                       < remover stash >
- git stash drop (nome da stash list) 

REVERTENDO UM COMMIT:
- git revert ( numero do commit )
- git revert  ( numero do commit ) --no-edit

DESFAZeR/APAGAR UM COMMIT: 
- git reset --hard HEAD~1

FORÇANDO ENVIO DE MUDANÇAS:
- git push --force
- git push --force-whith-lease         < verificar antes de forçar o envio >

REBASE:
- git rebase (nome da branch)          < mesclar branch >
- git rabase --interactive HEAD-(Numero de comitts)     < Juntar commits >

RECRIANDO BRANCH BASEADO NO SERVIDOR:
- git fetch origin (nome da branch) 

- git cherry-pick  (Número de commit)   < pegar um commit de outra branch >

BUSCA BINARIA:
- git bisect start                       < achar um commit especifico >
- git bisect good (numero do commit) 
- git bisect bag (numero do commit)
- git bisect reset 







FORK e PULL REQUEST : Editar e copiar projeto, comentar...

ISSUES : Comentar problemas 

ARQUIVO README: Documentação/Apresentação do projeto - App: Dillinger

35. CHAVE  SSH: Autendicação - segurança REVER AULA

git config --global alias      < abreviar comandos >

git (branch ou log --oneline) | grep (palavra buscada)< filtrar informações >

Plataformas:
- Sourcetree aula 71
- GitKraken aula 72 
- Git GUI aula 73
- Visual Studio Code 74
- Visual Studio aula 75
- Android Studio aula 76 






